{"ast":null,"code":"var _jsxFileName = \"E:\\\\BaiduNetdiskDownload\\\\studyreact\\\\src\\\\day2\\\\_\\u72B6\\u6001\\u548C\\u5C5E\\u6027.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom'; // react的组件 只有两个数据源 一个是属性props;一个是状态state\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // 当前组件的私有属性\n      name: '珠峰',\n      time: new Date().toLocaleString()\n    };\n    this.aaa = 123;\n  } // 想让视图更新 react规定 需要顶用setState这个方法；\n  // 换句话说就是setState可以触发视图更新 也就是让render函数执行；\n  // 在render中 不能写setState 这个方法执行会 触发死循环\n\n\n  componentDidMount() {}\n\n  render() {\n    // 使用解构取值更方便\n    let {\n      className\n    } = this.props;\n    let {\n      name,\n      time\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, name), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, this.aaa), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, time));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  className: \"box\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day2/_状态和属性.js"],"names":["React","ReactDOM","App","Component","constructor","props","state","name","time","Date","toLocaleString","aaa","componentDidMount","render","className","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;;AACA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAiC;AAC7BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT;AACAC,MAAAA,IAAI,EAAC,IAFI;AAGTC,MAAAA,IAAI,EAAC,IAAIC,IAAJ,GAAWC,cAAX;AAHI,KAAb;AAKA,SAAKC,GAAL,GAAW,GAAX;AACH,GAT4B,CAU7B;AACA;AACA;;;AACAC,EAAAA,iBAAiB,GAAE,CAElB;;AAEDC,EAAAA,MAAM,GAAE;AACJ;AACA,QAAI;AAACC,MAAAA;AAAD,QAAc,KAAKT,KAAvB;AACA,QAAI;AAACE,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAc,KAAKF,KAAvB;AACA,wBAAO;AAAK,MAAA,SAAS,EAAEQ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKP,IAAL,CADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKI,GAAV,CAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,IAAL,CAHG,CAAP;AAKH;;AA1B4B;;AA4BjCP,QAAQ,CAACY,MAAT,eAAgB,oBAAC,GAAD;AAAK,EAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuCE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvC","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// react的组件 只有两个数据源 一个是属性props;一个是状态state\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            // 当前组件的私有属性\r\n            name:'珠峰',\r\n            time:new Date().toLocaleString()\r\n        }\r\n        this.aaa = 123;\r\n    }\r\n    // 想让视图更新 react规定 需要顶用setState这个方法；\r\n    // 换句话说就是setState可以触发视图更新 也就是让render函数执行；\r\n    // 在render中 不能写setState 这个方法执行会 触发死循环\r\n    componentDidMount(){\r\n\r\n    }\r\n\r\n    render(){\r\n        // 使用解构取值更方便\r\n        let {className} = this.props;\r\n        let {name,time} = this.state;\r\n        return <div className={className}>\r\n            <h1>{name}</h1>\r\n            <h2>{this.aaa}</h2>\r\n            <h2>{time}</h2>\r\n        </div>\r\n    }\r\n}\r\nReactDOM.render(<App className='box'/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}