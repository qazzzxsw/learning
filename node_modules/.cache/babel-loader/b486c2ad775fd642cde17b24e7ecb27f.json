{"ast":null,"code":"var _jsxFileName = \"E:\\\\BaiduNetdiskDownload\\\\studyreact\\\\src\\\\day3\\\\1_useState.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; //useState 是react的一个hook;react hook 就是为了丰富 函数式组件的功能\n// 想在函数式组件中使用 类似于 类组件的state; 我们需要借助useState这个hook\n// let[变量名，更改变量的函数的名字] = useState('变量对应的初始值)\n\nfunction App() {\n  // let count = 100;\n  let [count, setCount] = useState(10000);\n  let [name, setName] = useState('哈哈');\n\n  function add() {\n    let t = count + 10;\n    setCount(t); //更新count 并触发视图更新等同于{setState({count:t})}\n\n    console.log(count);\n  }\n\n  function minus() {\n    let t = count - 10;\n    setCount(t);\n  }\n\n  console.log(count, setCount);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: minus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setName('哈哈哈嘿嘿');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"change\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, name));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day3/1_useState.js"],"names":["React","useState","ReactDOM","App","count","setCount","name","setName","add","t","console","log","minus","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;;AACA,SAASC,GAAT,GAAc;AACV;AAEA,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,KAAD,CAA/B;AACA,MAAI,CAACK,IAAD,EAAMC,OAAN,IAAiBN,QAAQ,CAAC,IAAD,CAA7B;;AACA,WAASO,GAAT,GAAc;AACV,QAAIC,CAAC,GAAGL,KAAK,GAAE,EAAf;AACAC,IAAAA,QAAQ,CAACI,CAAD,CAAR,CAFU,CAEE;;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACH;;AACD,WAASQ,KAAT,GAAgB;AACZ,QAAIH,CAAC,GAAGL,KAAK,GAAE,EAAf;AACAC,IAAAA,QAAQ,CAACI,CAAD,CAAR;AACH;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ,EAAkBC,QAAlB;AACA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,OAAO,EAAEG,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADG,eAEH;AAAQ,IAAA,OAAO,EAAEI,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAL,CAHG,eAIH;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACG,MAAAA,OAAO,CAAC,OAAD,CAAP;AAAiB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CALG,CAAP;AAOH;;AAGDJ,QAAQ,CAACW,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvB","sourcesContent":["import React,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//useState 是react的一个hook;react hook 就是为了丰富 函数式组件的功能\r\n// 想在函数式组件中使用 类似于 类组件的state; 我们需要借助useState这个hook\r\n// let[变量名，更改变量的函数的名字] = useState('变量对应的初始值)\r\nfunction App(){\r\n    // let count = 100;\r\n    \r\n    let [count,setCount] = useState(10000)\r\n    let [name,setName] = useState('哈哈')\r\n    function add(){\r\n        let t = count +10;\r\n        setCount(t) //更新count 并触发视图更新等同于{setState({count:t})}\r\n        console.log(count)\r\n    }\r\n    function minus(){\r\n        let t = count -10;\r\n        setCount(t)\r\n    }\r\n    console.log(count,setCount)\r\n    return <div>\r\n        <button onClick={add}>+</button>\r\n        <button onClick={minus}>-</button>\r\n        <h1>{count}</h1>\r\n        <button onClick={()=>{setName('哈哈哈嘿嘿')}}>change</button>\r\n        <h2>{name}</h2>\r\n    </div>\r\n}\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}