{"ast":null,"code":"var _jsxFileName = \"E:\\\\BaiduNetdiskDownload\\\\studyreact\\\\src\\\\day2\\\\_\\u4E8B\\u4EF6.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      count: 100,\n      name: 123\n    };\n\n    this.minus2 = (n, e) => {\n      console.log(e);\n      this.setState({\n        count: this.state.count - n\n      });\n    };\n  }\n\n  add(n, e) {\n    console.log(e.nativeEvent, e.target);\n    console.log(this); // setState更新数据 大部分是一个异步操作\n    // 在原生事件绑定中 或者 定时器中 它是一个同步的\n\n    this.setState({\n      count: this.state.count + n\n    }, function () {\n      // 数据更新完成之后触发\n      console.log(this.state.count);\n    });\n  }\n\n  minus(n, e, m) {\n    console.log(e);\n    this.setState({\n      count: this.state.count - n - m\n    });\n  } // e是一个复合事件 是react执行的时候合并传递过来的所以在后面\n\n\n  over() {\n    console.log('over');\n  }\n\n  componentDidMount() {\n    document.getElementById('qqq').onclick = () => {\n      this.setState({\n        name: 666\n      });\n      console.log(this.state.name);\n    };\n  }\n\n  render() {\n    let {\n      count\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.add.bind(this, 10),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"+10\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.add.bind(this, 100),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"+100\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        this.minus(10, e, 20);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.minus2.bind(null, 5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"-5\"), /*#__PURE__*/React.createElement(\"h2\", {\n      onMouseOver: this.over,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, count), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"qqq\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"+++\"));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day2/_事件.js"],"names":["React","ReactDOM","App","Component","state","count","name","minus2","n","e","console","log","setState","add","nativeEvent","target","minus","m","over","componentDidMount","document","getElementById","onclick","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nclass App extends React.Component{\r\n    // constructor(){\r\n    //     super();\r\n    //     this.state ={\r\n    //         count:100\r\n    //     }\r\n    // }\r\n    state ={\r\n        count:100,\r\n        name:123\r\n    }\r\n    add(n,e){\r\n        console.log(e.nativeEvent,e.target)\r\n        console.log(this)\r\n        // setState更新数据 大部分是一个异步操作\r\n        // 在原生事件绑定中 或者 定时器中 它是一个同步的\r\n        this.setState({\r\n            count:this.state.count+n\r\n        },function(){\r\n            // 数据更新完成之后触发\r\n            console.log(this.state.count)\r\n        })\r\n    }\r\n    minus(n,e,m){\r\n        console.log(e)\r\n        this.setState({\r\n            count:this.state.count-n-m\r\n        })\r\n    }\r\n    // e是一个复合事件 是react执行的时候合并传递过来的所以在后面\r\n    minus2=(n,e)=>{\r\n        console.log(e)\r\n        this.setState({\r\n            count:this.state.count - n\r\n        })\r\n    }\r\n    over(){\r\n        console.log('over')\r\n    }\r\n    componentDidMount(){\r\n        document.getElementById('qqq').onclick= ()=>{\r\n            this.setState({\r\n                name:666\r\n            })\r\n            console.log(this.state.name)\r\n        }\r\n    }\r\n    render(){\r\n        let {count} = this.state;\r\n        return <div className=''>\r\n            {/* on+事件名 事件名遵循 小驼峰命名 */}\r\n            {/* bind()在函数体绑定this 会重新返回一个函数 */}\r\n            <button onClick={this.add.bind(this,10)}>+10</button>\r\n            <button onClick={this.add.bind(this,100)}>+100</button>\r\n            {/* 使用箭头函数就不用了bind()绑定this了 */}\r\n            <button onClick={(e)=>{this.minus(10,e,20)}}>-</button>\r\n            <button onClick={this.minus2.bind(null,5)}>-5</button>\r\n            <h2 onMouseOver={this.over}>{count}</h2>\r\n            <button id='qqq'>+++</button>\r\n        </div>\r\n    }\r\n}\r\n\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}