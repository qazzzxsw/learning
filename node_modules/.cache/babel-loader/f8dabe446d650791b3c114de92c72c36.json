{"ast":null,"code":"// import React from 'react'\n// import ReactDom from 'react-dom'\nclass Element {\n  constructor(type, props, children) {\n    this.type = type;\n    this.props = props || {};\n    this.children = children;\n  } // 将大写字母处理成‘-’+小写字母\n\n\n  fn(str) {\n    return str.replace(/[A-Z]/g, function (a) {\n      return '-' + a.toLowerCase();\n    });\n  }\n\n  render() {\n    // this.type i p h1 div\n    let ele = document.createElement(this.type); // 遍历props div.setAttribute('class','box)\n\n    Object.keys(this.props).forEach(key => {\n      switch (key) {\n        // 处理 class\n        case 'className':\n          ele.setAttribute('class', this.props[key]);\n          break;\n\n        case 'style':\n          let str = '';\n          Object.keys(this.props[key]).forEach(item => {\n            // item color fontSize-> font-size\n            // this.props[key] {color:'red',fontSize:'18px'}\n            str += `${this.fn(item)}:${this.props[key][item]}`;\n          });\n          ele.setAttribute('style', str);\n          break;\n\n        case 'htmlFor':\n          ele.setAttribute('for', this.props[key]);\n          break;\n\n        default:\n          ele.setAttribute(key, this.props[key]);\n          break;\n      }\n    }); // 处理子节点\n\n    this.children.forEach(item => {\n      // item都是儿子 儿子可能是字符窜\n      // item若是Element这个类的一个实例(对象)，但是我们要的是真实的DOM\n      // 实例可以通过render方法执行产生真实的DOM\n      // 如果是字符窜 需要转成 文本节点 document.createTextNode()\n      item instanceof Element ? ele.appendChild(item.render()) : ele.appendChild(document.createTextNode(item));\n    });\n    return ele;\n  }\n\n}\n\nlet React = {\n  createElement(type, props, ...children) {\n    return new Element(type, props, children);\n  }\n\n};\nlet ReactDom = {\n  render(ele, container) {\n    //ele是Element的一个实例； 插入的需要是真实的DOM\n    container.appendChild(ele.render());\n  }\n\n};\nlet ele = React.createElement('div', {\n  id: 'box',\n  className: 'box',\n  style: {\n    color: 'red',\n    fontSize: '18px'\n  }\n}, \"哈哈还是\", React.createElement('i', null, \"呵呵\"), React.createElement('p', null, 'hello', React.createElement('b', null, '666'))); // 虚拟DOM 就是用JS对象去模拟真实DOM树\n\nconsole.log(ele);\nReactDom.render(ele, document.querySelector('#root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day1/_selfjsx.js"],"names":["Element","constructor","type","props","children","fn","str","replace","a","toLowerCase","render","ele","document","createElement","Object","keys","forEach","key","setAttribute","item","appendChild","createTextNode","React","ReactDom","container","id","className","style","color","fontSize","console","log","querySelector"],"mappings":"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","sourcesContent":["// import React from 'react'\r\n// import ReactDom from 'react-dom'\r\n\r\n\r\nclass Element{\r\n    constructor(type,props,children){\r\n        this.type = type;\r\n        this.props = props || {};\r\n        this.children = children\r\n    }\r\n    // 将大写字母处理成‘-’+小写字母\r\n    fn(str){\r\n        return str.replace(/[A-Z]/g,function(a){\r\n            return '-'+a.toLowerCase()\r\n        })\r\n    }\r\n    render(){\r\n        // this.type i p h1 div\r\n        let ele = document.createElement(this.type)\r\n        // 遍历props div.setAttribute('class','box)\r\n        Object.keys(this.props).forEach(key =>{\r\n            switch(key) {\r\n                // 处理 class\r\n                case 'className':\r\n                    ele.setAttribute('class',this.props[key])\r\n                    break;\r\n                case 'style':\r\n                    let str =''\r\n                    Object.keys(this.props[key]).forEach(item => {\r\n                        // item color fontSize-> font-size\r\n                        // this.props[key] {color:'red',fontSize:'18px'}\r\n                        str += `${this.fn(item)}:${this.props[key][item]}`\r\n                    })\r\n                    ele.setAttribute('style',str)\r\n                    break;\r\n                case 'htmlFor':\r\n                    ele.setAttribute('for',this.props[key])\r\n                    break;\r\n                default:\r\n                    ele.setAttribute(key,this.props[key])\r\n                    break;\r\n            }\r\n        })\r\n\r\n         // 处理子节点\r\n         this.children.forEach(item => {\r\n            // item都是儿子 儿子可能是字符窜\r\n            // item若是Element这个类的一个实例(对象)，但是我们要的是真实的DOM\r\n            // 实例可以通过render方法执行产生真实的DOM\r\n            // 如果是字符窜 需要转成 文本节点 document.createTextNode()\r\n            item instanceof Element?\r\n            ele.appendChild(item.render()):\r\n            ele.appendChild(document.createTextNode(item))\r\n        })\r\n        return ele;\r\n    }\r\n}\r\n\r\nlet React = {\r\n    createElement(type,props,...children){\r\n        return new Element(type,props,children)\r\n    }\r\n}\r\n\r\nlet ReactDom = {\r\n    render(ele,container){\r\n        //ele是Element的一个实例； 插入的需要是真实的DOM\r\n        container.appendChild(ele.render())\r\n    }\r\n}\r\n\r\n\r\nlet ele = React.createElement('div',{id:'box',className:'box',style:{color:'red',fontSize:'18px'}},\"哈哈还是\",\r\n              React.createElement('i',null,\"呵呵\"),\r\n              React.createElement('p',null,'hello',React.createElement('b',null,'666'))\r\n              )\r\n// 虚拟DOM 就是用JS对象去模拟真实DOM树\r\nconsole.log(ele)   \r\n\r\nReactDom.render(ele,document.querySelector('#root'))"]},"metadata":{},"sourceType":"module"}