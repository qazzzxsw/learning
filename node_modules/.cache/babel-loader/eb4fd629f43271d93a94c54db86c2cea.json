{"ast":null,"code":"var _jsxFileName = \"E:\\\\BaiduNetdiskDownload\\\\studyreact\\\\src\\\\day3\\\\1_useState.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom'; //useState 是react的一个hook;react hook 就是为了丰富 函数式组件的功能\n// 想在函数式组件中使用 类似于 类组件的state; 我们需要借助useState这个hook\n// let[变量名，更改变量的函数的名字] = useState('变量对应的初始值)\n// function App(){\n//     // let count = 100;\n//     let [count,setCount] = useState(10000)\n//     let [name,setName] = useState('哈哈')\n//     function add(){\n//         let t = count +10;\n//         setCount(t) //更新count 并触发视图更新等同于{setState({count:t})}\n//         console.log(count)\n//     }\n//     function minus(){\n//         let t = count -10;\n//         setCount(t)\n//     }\n//     console.log(count,setCount)\n//     return <div>\n//         <button onClick={add}>+</button>\n//         <button onClick={minus}>-</button>\n//         <h1>{count}</h1>\n//         <button onClick={()=>{setName('哈哈哈嘿嘿')}}>change</button>\n//         <h2>{name}</h2>\n//     </div>\n// }\n\nfunction App() {\n  let [state, setState] = useState({\n    count: 100,\n    name: '哈哈'\n  });\n\n  function add() {\n    let t = state.count + 10;\n    let obj = { ...state,\n      count: t\n    };\n    setState(obj);\n  }\n\n  function minus() {\n    let t = state.count - 10;\n    setState({ ...state,\n      count: t\n    });\n  }\n\n  function setName() {\n    setState({\n      // ...state,\n      name: '哈哈哈嘿嘿'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: minus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"-\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, state.count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"change\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, state.name));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day3/1_useState.js"],"names":["React","useState","ReactDOM","App","state","setState","count","name","add","t","obj","minus","setName","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAc;AACV,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC;AAC5BK,IAAAA,KAAK,EAAC,GADsB;AAE5BC,IAAAA,IAAI,EAAC;AAFuB,GAAD,CAA/B;;AAIA,WAASC,GAAT,GAAc;AACV,QAAIC,CAAC,GAAGL,KAAK,CAACE,KAAN,GAAa,EAArB;AACA,QAAII,GAAG,GAAG,EACN,GAAGN,KADG;AAENE,MAAAA,KAAK,EAACG;AAFA,KAAV;AAIAJ,IAAAA,QAAQ,CAACK,GAAD,CAAR;AACH;;AACD,WAASC,KAAT,GAAgB;AACZ,QAAIF,CAAC,GAAGL,KAAK,CAACE,KAAN,GAAc,EAAtB;AACAD,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELE,MAAAA,KAAK,EAACG;AAFD,KAAD,CAAR;AAIH;;AACD,WAASG,OAAT,GAAkB;AACdP,IAAAA,QAAQ,CAAC;AACL;AACAE,MAAAA,IAAI,EAAC;AAFA,KAAD,CAAR;AAIH;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,OAAO,EAAEC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADG,eAEH;AAAQ,IAAA,OAAO,EAAEG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFG,eAGH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACE,KAAX,CAHG,eAIH;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG,eAKH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKR,KAAK,CAACG,IAAX,CALG,CAAP;AAOH;;AAEDL,QAAQ,CAACW,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvB","sourcesContent":["import React,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//useState 是react的一个hook;react hook 就是为了丰富 函数式组件的功能\r\n// 想在函数式组件中使用 类似于 类组件的state; 我们需要借助useState这个hook\r\n// let[变量名，更改变量的函数的名字] = useState('变量对应的初始值)\r\n// function App(){\r\n//     // let count = 100;\r\n    \r\n//     let [count,setCount] = useState(10000)\r\n//     let [name,setName] = useState('哈哈')\r\n//     function add(){\r\n//         let t = count +10;\r\n//         setCount(t) //更新count 并触发视图更新等同于{setState({count:t})}\r\n//         console.log(count)\r\n//     }\r\n//     function minus(){\r\n//         let t = count -10;\r\n//         setCount(t)\r\n//     }\r\n//     console.log(count,setCount)\r\n//     return <div>\r\n//         <button onClick={add}>+</button>\r\n//         <button onClick={minus}>-</button>\r\n//         <h1>{count}</h1>\r\n//         <button onClick={()=>{setName('哈哈哈嘿嘿')}}>change</button>\r\n//         <h2>{name}</h2>\r\n//     </div>\r\n// }\r\n\r\nfunction App(){\r\n    let [state,setState] = useState({\r\n        count:100,\r\n        name:'哈哈'\r\n    })\r\n    function add(){\r\n        let t = state.count +10;\r\n        let obj = {\r\n            ...state,\r\n            count:t\r\n        }\r\n        setState(obj)\r\n    }\r\n    function minus(){\r\n        let t = state.count - 10;\r\n        setState({\r\n            ...state,\r\n            count:t\r\n        })\r\n    }\r\n    function setName(){\r\n        setState({\r\n            // ...state,\r\n            name:'哈哈哈嘿嘿'\r\n        })\r\n    }\r\n    return <div>\r\n        <button onClick={add}>+</button>\r\n        <button onClick={minus}>-</button>\r\n        <h1>{state.count}</h1>\r\n        <button onClick={setName}>change</button>\r\n        <h2>{state.name}</h2>\r\n    </div>\r\n}\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}