{"ast":null,"code":"var _jsxFileName = \"E:\\\\BaiduNetdiskDownload\\\\studyreact\\\\src\\\\day3\\\\9_useEffect.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'; // useState 是为了让函数式组件使用setState \n// useEffect 是为了让函数式组件使用 钩子函数\n\nfunction App() {\n  let [count, setCount] = useState(100);\n  let [name, setName] = useState('哈哈哈'); // useEffect 类似于componentDidMount和componentDidUpdate的一个结合体\n  // 可以通过第二个参数 来决定 当前的这个回调函数 什么时候执行\n\n  useEffect(() => {\n    console.log('count', count);\n  }, [count]);\n  useEffect(() => {\n    console.log('name', name);\n  }, [name]);\n  useEffect(() => {\n    console.log('all', name, count);\n  }, []); // 若传递一个空数组，name只在初次加载的时候执行\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: setCount.bind(null, count + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"change\"), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setName('哈哈哈嘿嘿');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"\\u4FEE\\u6539\\u540D\\u5B57\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, name));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:/BaiduNetdiskDownload/studyreact/src/day3/9_useEffect.js"],"names":["React","useState","useEffect","ReactDOM","App","count","setCount","name","setName","console","log","bind","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;AACA;;AACA,SAASC,GAAT,GAAc;AACV,MAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBL,QAAQ,CAAC,GAAD,CAA/B;AACA,MAAI,CAACM,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,KAAD,CAA7B,CAFU,CAGV;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBL,KAApB;AACH,GAFQ,EAEP,CAACA,KAAD,CAFO,CAAT;AAGAH,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBH,IAAnB;AACH,GAFQ,EAEP,CAACA,IAAD,CAFO,CAAT;AAGAL,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAkBH,IAAlB,EAAuBF,KAAvB;AACH,GAFQ,EAEP,EAFO,CAAT,CAXU,CAaJ;;AAEN,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACH;AAAQ,IAAA,OAAO,EAAEC,QAAQ,CAACK,IAAT,CAAc,IAAd,EAAmBN,KAAK,GAAC,CAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAL,CAFG,eAGH;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACG,MAAAA,OAAO,CAAC,OAAD,CAAP;AAAiB,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAHG,eAIH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,IAAL,CAJG,CAAP;AAMH;;AACDJ,QAAQ,CAACS,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAuBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAvB","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// useState 是为了让函数式组件使用setState \r\n// useEffect 是为了让函数式组件使用 钩子函数\r\nfunction App(){\r\n    let [count,setCount] = useState(100)\r\n    let [name,setName] = useState('哈哈哈')\r\n    // useEffect 类似于componentDidMount和componentDidUpdate的一个结合体\r\n    // 可以通过第二个参数 来决定 当前的这个回调函数 什么时候执行\r\n    useEffect(()=>{\r\n        console.log('count',count)\r\n    },[count])\r\n    useEffect(()=>{\r\n        console.log('name',name)\r\n    },[name])\r\n    useEffect(()=>{\r\n        console.log('all',name,count)\r\n    },[]) // 若传递一个空数组，name只在初次加载的时候执行\r\n\r\n    return <div>\r\n        <button onClick={setCount.bind(null,count+1)}>change</button>\r\n        <h1>{count}</h1>\r\n        <button onClick={()=>{setName('哈哈哈嘿嘿')}}>修改名字</button>\r\n        <h2>{name}</h2>\r\n    </div>\r\n}\r\nReactDOM.render(<App/>,document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}